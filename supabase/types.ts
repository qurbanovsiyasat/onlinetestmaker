{"types":"export type Json =\n  | string\n  | number\n  | boolean\n  | null\n  | { [key: string]: Json | undefined }\n  | Json[]\n\nexport type Database = {\n  // Allows to automatically instantiate createClient with right options\n  // instead of createClient<Database, { PostgrestVersion: 'XX' }>(URL, KEY)\n  __InternalSupabase: {\n    PostgrestVersion: \"13.0.4\"\n  }\n  public: {\n    Tables: {\n      ai_conversations: {\n        Row: {\n          context_id: string | null\n          context_type: string | null\n          created_at: string | null\n          id: string\n          messages: Json\n          session_id: string\n          updated_at: string | null\n          user_id: string | null\n        }\n        Insert: {\n          context_id?: string | null\n          context_type?: string | null\n          created_at?: string | null\n          id?: string\n          messages?: Json\n          session_id: string\n          updated_at?: string | null\n          user_id?: string | null\n        }\n        Update: {\n          context_id?: string | null\n          context_type?: string | null\n          created_at?: string | null\n          id?: string\n          messages?: Json\n          session_id?: string\n          updated_at?: string | null\n          user_id?: string | null\n        }\n        Relationships: []\n      }\n      categories: {\n        Row: {\n          color: string | null\n          created_at: string | null\n          description: string | null\n          icon: string | null\n          id: string\n          is_active: boolean | null\n          name: string\n          type: string\n          updated_at: string | null\n        }\n        Insert: {\n          color?: string | null\n          created_at?: string | null\n          description?: string | null\n          icon?: string | null\n          id?: string\n          is_active?: boolean | null\n          name: string\n          type: string\n          updated_at?: string | null\n        }\n        Update: {\n          color?: string | null\n          created_at?: string | null\n          description?: string | null\n          icon?: string | null\n          id?: string\n          is_active?: boolean | null\n          name?: string\n          type?: string\n          updated_at?: string | null\n        }\n        Relationships: []\n      }\n      email_change_requests: {\n        Row: {\n          created_at: string | null\n          expires_at: string\n          id: string\n          is_verified: boolean | null\n          new_email: string\n          old_email: string\n          updated_at: string | null\n          user_id: string\n          verification_token: string\n        }\n        Insert: {\n          created_at?: string | null\n          expires_at: string\n          id?: string\n          is_verified?: boolean | null\n          new_email: string\n          old_email: string\n          updated_at?: string | null\n          user_id: string\n          verification_token: string\n        }\n        Update: {\n          created_at?: string | null\n          expires_at?: string\n          id?: string\n          is_verified?: boolean | null\n          new_email?: string\n          old_email?: string\n          updated_at?: string | null\n          user_id?: string\n          verification_token?: string\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"email_change_requests_user_id_fkey\"\n            columns: [\"user_id\"]\n            isOneToOne: false\n            referencedRelation: \"users\"\n            referencedColumns: [\"id\"]\n          },\n        ]\n      }\n      form_attachments: {\n        Row: {\n          created_at: string | null\n          file_name: string\n          file_path: string\n          file_size: number\n          form_id: string | null\n          id: string\n          is_image: boolean | null\n          mime_type: string\n          original_name: string\n          storage_bucket: string\n          updated_at: string | null\n          user_id: string | null\n        }\n        Insert: {\n          created_at?: string | null\n          file_name: string\n          file_path: string\n          file_size: number\n          form_id?: string | null\n          id?: string\n          is_image?: boolean | null\n          mime_type: string\n          original_name: string\n          storage_bucket?: string\n          updated_at?: string | null\n          user_id?: string | null\n        }\n        Update: {\n          created_at?: string | null\n          file_name?: string\n          file_path?: string\n          file_size?: number\n          form_id?: string | null\n          id?: string\n          is_image?: boolean | null\n          mime_type?: string\n          original_name?: string\n          storage_bucket?: string\n          updated_at?: string | null\n          user_id?: string | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"form_attachments_form_id_fkey\"\n            columns: [\"form_id\"]\n            isOneToOne: false\n            referencedRelation: \"forms\"\n            referencedColumns: [\"id\"]\n          },\n        ]\n      }\n      form_categories: {\n        Row: {\n          color: string | null\n          created_at: string | null\n          description: string | null\n          id: string\n          name: string\n        }\n        Insert: {\n          color?: string | null\n          created_at?: string | null\n          description?: string | null\n          id?: string\n          name: string\n        }\n        Update: {\n          color?: string | null\n          created_at?: string | null\n          description?: string | null\n          id?: string\n          name?: string\n        }\n        Relationships: []\n      }\n      form_fields: {\n        Row: {\n          created_at: string | null\n          field_type: string\n          form_id: string\n          id: string\n          is_required: boolean | null\n          label: string\n          options: Json | null\n          order_index: number\n          placeholder: string | null\n          validation_rules: Json | null\n        }\n        Insert: {\n          created_at?: string | null\n          field_type: string\n          form_id: string\n          id?: string\n          is_required?: boolean | null\n          label: string\n          options?: Json | null\n          order_index: number\n          placeholder?: string | null\n          validation_rules?: Json | null\n        }\n        Update: {\n          created_at?: string | null\n          field_type?: string\n          form_id?: string\n          id?: string\n          is_required?: boolean | null\n          label?: string\n          options?: Json | null\n          order_index?: number\n          placeholder?: string | null\n          validation_rules?: Json | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"form_fields_form_id_fkey\"\n            columns: [\"form_id\"]\n            isOneToOne: false\n            referencedRelation: \"forms\"\n            referencedColumns: [\"id\"]\n          },\n        ]\n      }\n      form_likes: {\n        Row: {\n          created_at: string | null\n          form_id: string\n          id: string\n          user_id: string\n        }\n        Insert: {\n          created_at?: string | null\n          form_id: string\n          id?: string\n          user_id: string\n        }\n        Update: {\n          created_at?: string | null\n          form_id?: string\n          id?: string\n          user_id?: string\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"form_likes_form_id_fkey\"\n            columns: [\"form_id\"]\n            isOneToOne: false\n            referencedRelation: \"forms\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"form_likes_user_id_fkey\"\n            columns: [\"user_id\"]\n            isOneToOne: false\n            referencedRelation: \"users\"\n            referencedColumns: [\"id\"]\n          },\n        ]\n      }\n      form_replies: {\n        Row: {\n          author_id: string\n          content: string\n          created_at: string | null\n          form_id: string\n          id: string\n          likes: number | null\n          parent_reply_id: string | null\n          updated_at: string | null\n        }\n        Insert: {\n          author_id: string\n          content: string\n          created_at?: string | null\n          form_id: string\n          id?: string\n          likes?: number | null\n          parent_reply_id?: string | null\n          updated_at?: string | null\n        }\n        Update: {\n          author_id?: string\n          content?: string\n          created_at?: string | null\n          form_id?: string\n          id?: string\n          likes?: number | null\n          parent_reply_id?: string | null\n          updated_at?: string | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"form_replies_author_id_fkey\"\n            columns: [\"author_id\"]\n            isOneToOne: false\n            referencedRelation: \"users\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"form_replies_form_id_fkey\"\n            columns: [\"form_id\"]\n            isOneToOne: false\n            referencedRelation: \"forms\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"form_replies_parent_reply_id_fkey\"\n            columns: [\"parent_reply_id\"]\n            isOneToOne: false\n            referencedRelation: \"form_replies\"\n            referencedColumns: [\"id\"]\n          },\n        ]\n      }\n      form_submissions: {\n        Row: {\n          form_id: string\n          id: string\n          submission_data: Json\n          submitted_at: string | null\n          submitter_id: string | null\n          submitter_ip: unknown | null\n          user_agent: string | null\n        }\n        Insert: {\n          form_id: string\n          id?: string\n          submission_data: Json\n          submitted_at?: string | null\n          submitter_id?: string | null\n          submitter_ip?: unknown | null\n          user_agent?: string | null\n        }\n        Update: {\n          form_id?: string\n          id?: string\n          submission_data?: Json\n          submitted_at?: string | null\n          submitter_id?: string | null\n          submitter_ip?: unknown | null\n          user_agent?: string | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"form_submissions_form_id_fkey\"\n            columns: [\"form_id\"]\n            isOneToOne: false\n            referencedRelation: \"forms\"\n            referencedColumns: [\"id\"]\n          },\n        ]\n      }\n      form_views: {\n        Row: {\n          created_at: string | null\n          form_id: string | null\n          id: string\n          ip_address: unknown | null\n          user_agent: string | null\n          user_id: string | null\n        }\n        Insert: {\n          created_at?: string | null\n          form_id?: string | null\n          id?: string\n          ip_address?: unknown | null\n          user_agent?: string | null\n          user_id?: string | null\n        }\n        Update: {\n          created_at?: string | null\n          form_id?: string | null\n          id?: string\n          ip_address?: unknown | null\n          user_agent?: string | null\n          user_id?: string | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"form_views_form_id_fkey\"\n            columns: [\"form_id\"]\n            isOneToOne: false\n            referencedRelation: \"forms\"\n            referencedColumns: [\"id\"]\n          },\n        ]\n      }\n      forms: {\n        Row: {\n          access_code: string | null\n          category: string | null\n          category_id: string | null\n          created_at: string | null\n          creator_id: string\n          description: string | null\n          id: string\n          is_public: boolean | null\n          likes_count: number | null\n          settings: Json | null\n          submission_count: number | null\n          title: string\n          updated_at: string | null\n          view_count: number | null\n        }\n        Insert: {\n          access_code?: string | null\n          category?: string | null\n          category_id?: string | null\n          created_at?: string | null\n          creator_id: string\n          description?: string | null\n          id?: string\n          is_public?: boolean | null\n          likes_count?: number | null\n          settings?: Json | null\n          submission_count?: number | null\n          title: string\n          updated_at?: string | null\n          view_count?: number | null\n        }\n        Update: {\n          access_code?: string | null\n          category?: string | null\n          category_id?: string | null\n          created_at?: string | null\n          creator_id?: string\n          description?: string | null\n          id?: string\n          is_public?: boolean | null\n          likes_count?: number | null\n          settings?: Json | null\n          submission_count?: number | null\n          title?: string\n          updated_at?: string | null\n          view_count?: number | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"forms_category_id_fkey\"\n            columns: [\"category_id\"]\n            isOneToOne: false\n            referencedRelation: \"categories\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"forms_creator_id_fkey\"\n            columns: [\"creator_id\"]\n            isOneToOne: false\n            referencedRelation: \"users\"\n            referencedColumns: [\"id\"]\n          },\n        ]\n      }\n      forum_likes: {\n        Row: {\n          created_at: string\n          id: number\n          post_id: string | null\n          reply_id: string | null\n          user_id: string\n        }\n        Insert: {\n          created_at?: string\n          id?: never\n          post_id?: string | null\n          reply_id?: string | null\n          user_id: string\n        }\n        Update: {\n          created_at?: string\n          id?: never\n          post_id?: string | null\n          reply_id?: string | null\n          user_id?: string\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"forum_likes_post_id_fkey\"\n            columns: [\"post_id\"]\n            isOneToOne: false\n            referencedRelation: \"forum_posts\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"forum_likes_reply_id_fkey\"\n            columns: [\"reply_id\"]\n            isOneToOne: false\n            referencedRelation: \"forum_replies\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"forum_likes_user_id_fkey\"\n            columns: [\"user_id\"]\n            isOneToOne: false\n            referencedRelation: \"users\"\n            referencedColumns: [\"id\"]\n          },\n        ]\n      }\n      forum_posts: {\n        Row: {\n          author_id: string\n          category: string | null\n          content: string\n          created_at: string | null\n          id: string\n          image_url: string | null\n          is_locked: boolean | null\n          is_pinned: boolean | null\n          likes: number | null\n          likes_count: number | null\n          replies_count: number | null\n          shared_quiz_id: string | null\n          tags: string[] | null\n          title: string\n          updated_at: string | null\n          view_count: number\n          views: number | null\n        }\n        Insert: {\n          author_id: string\n          category?: string | null\n          content: string\n          created_at?: string | null\n          id?: string\n          image_url?: string | null\n          is_locked?: boolean | null\n          is_pinned?: boolean | null\n          likes?: number | null\n          likes_count?: number | null\n          replies_count?: number | null\n          shared_quiz_id?: string | null\n          tags?: string[] | null\n          title: string\n          updated_at?: string | null\n          view_count?: number\n          views?: number | null\n        }\n        Update: {\n          author_id?: string\n          category?: string | null\n          content?: string\n          created_at?: string | null\n          id?: string\n          image_url?: string | null\n          is_locked?: boolean | null\n          is_pinned?: boolean | null\n          likes?: number | null\n          likes_count?: number | null\n          replies_count?: number | null\n          shared_quiz_id?: string | null\n          tags?: string[] | null\n          title?: string\n          updated_at?: string | null\n          view_count?: number\n          views?: number | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"forum_posts_shared_quiz_id_fkey\"\n            columns: [\"shared_quiz_id\"]\n            isOneToOne: false\n            referencedRelation: \"quizzes\"\n            referencedColumns: [\"id\"]\n          },\n        ]\n      }\n      forum_replies: {\n        Row: {\n          author_id: string\n          content: string\n          created_at: string | null\n          id: string\n          likes: number | null\n          parent_reply_id: string | null\n          post_id: string\n          updated_at: string | null\n        }\n        Insert: {\n          author_id: string\n          content: string\n          created_at?: string | null\n          id?: string\n          likes?: number | null\n          parent_reply_id?: string | null\n          post_id: string\n          updated_at?: string | null\n        }\n        Update: {\n          author_id?: string\n          content?: string\n          created_at?: string | null\n          id?: string\n          likes?: number | null\n          parent_reply_id?: string | null\n          post_id?: string\n          updated_at?: string | null\n        }\n        Relationships: []\n      }\n      notifications: {\n        Row: {\n          created_at: string | null\n          data: Json | null\n          id: string\n          is_read: boolean | null\n          message: string | null\n          title: string\n          type: string\n          user_id: string\n        }\n        Insert: {\n          created_at?: string | null\n          data?: Json | null\n          id?: string\n          is_read?: boolean | null\n          message?: string | null\n          title: string\n          type: string\n          user_id: string\n        }\n        Update: {\n          created_at?: string | null\n          data?: Json | null\n          id?: string\n          is_read?: boolean | null\n          message?: string | null\n          title?: string\n          type?: string\n          user_id?: string\n        }\n        Relationships: []\n      }\n      profiles: {\n        Row: {\n          avatar_url: string | null\n          created_at: string\n          full_name: string | null\n          id: string\n          is_admin: boolean | null\n          is_super_admin: boolean | null\n          role: string | null\n          updated_at: string\n        }\n        Insert: {\n          avatar_url?: string | null\n          created_at?: string\n          full_name?: string | null\n          id: string\n          is_admin?: boolean | null\n          is_super_admin?: boolean | null\n          role?: string | null\n          updated_at?: string\n        }\n        Update: {\n          avatar_url?: string | null\n          created_at?: string\n          full_name?: string | null\n          id?: string\n          is_admin?: boolean | null\n          is_super_admin?: boolean | null\n          role?: string | null\n          updated_at?: string\n        }\n        Relationships: []\n      }\n      qa_answers: {\n        Row: {\n          author_id: string | null\n          content: string\n          created_at: string\n          id: string\n          image_url: string | null\n          is_accepted: boolean\n          parent_answer_id: string | null\n          question_id: string\n          updated_at: string\n          votes_score: number\n        }\n        Insert: {\n          author_id?: string | null\n          content: string\n          created_at?: string\n          id?: string\n          image_url?: string | null\n          is_accepted?: boolean\n          parent_answer_id?: string | null\n          question_id: string\n          updated_at?: string\n          votes_score?: number\n        }\n        Update: {\n          author_id?: string | null\n          content?: string\n          created_at?: string\n          id?: string\n          image_url?: string | null\n          is_accepted?: boolean\n          parent_answer_id?: string | null\n          question_id?: string\n          updated_at?: string\n          votes_score?: number\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"qa_answers_author_id_fkey\"\n            columns: [\"author_id\"]\n            isOneToOne: false\n            referencedRelation: \"users\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"qa_answers_parent_answer_id_fkey\"\n            columns: [\"parent_answer_id\"]\n            isOneToOne: false\n            referencedRelation: \"qa_answers\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"qa_answers_question_id_fkey\"\n            columns: [\"question_id\"]\n            isOneToOne: false\n            referencedRelation: \"qa_questions\"\n            referencedColumns: [\"id\"]\n          },\n        ]\n      }\n      qa_likes: {\n        Row: {\n          answer_id: string | null\n          created_at: string | null\n          id: string\n          question_id: string | null\n          user_id: string | null\n        }\n        Insert: {\n          answer_id?: string | null\n          created_at?: string | null\n          id?: string\n          question_id?: string | null\n          user_id?: string | null\n        }\n        Update: {\n          answer_id?: string | null\n          created_at?: string | null\n          id?: string\n          question_id?: string | null\n          user_id?: string | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"qa_likes_answer_id_fkey\"\n            columns: [\"answer_id\"]\n            isOneToOne: false\n            referencedRelation: \"qa_answers\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"qa_likes_question_id_fkey\"\n            columns: [\"question_id\"]\n            isOneToOne: false\n            referencedRelation: \"qa_questions\"\n            referencedColumns: [\"id\"]\n          },\n        ]\n      }\n      qa_questions: {\n        Row: {\n          accepted_answer_id: string | null\n          author_id: string | null\n          category: string | null\n          category_id: string | null\n          content: string\n          created_at: string\n          id: string\n          image_url: string | null\n          is_answered: boolean\n          tags: string[] | null\n          title: string\n          updated_at: string\n          views: number\n          votes_score: number\n        }\n        Insert: {\n          accepted_answer_id?: string | null\n          author_id?: string | null\n          category?: string | null\n          category_id?: string | null\n          content: string\n          created_at?: string\n          id?: string\n          image_url?: string | null\n          is_answered?: boolean\n          tags?: string[] | null\n          title: string\n          updated_at?: string\n          views?: number\n          votes_score?: number\n        }\n        Update: {\n          accepted_answer_id?: string | null\n          author_id?: string | null\n          category?: string | null\n          category_id?: string | null\n          content?: string\n          created_at?: string\n          id?: string\n          image_url?: string | null\n          is_answered?: boolean\n          tags?: string[] | null\n          title?: string\n          updated_at?: string\n          views?: number\n          votes_score?: number\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"fk_qa_questions_accepted_answer\"\n            columns: [\"accepted_answer_id\"]\n            isOneToOne: false\n            referencedRelation: \"qa_answers\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"qa_questions_author_id_fkey\"\n            columns: [\"author_id\"]\n            isOneToOne: false\n            referencedRelation: \"users\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"qa_questions_category_id_fkey\"\n            columns: [\"category_id\"]\n            isOneToOne: false\n            referencedRelation: \"categories\"\n            referencedColumns: [\"id\"]\n          },\n        ]\n      }\n      qa_views: {\n        Row: {\n          created_at: string | null\n          id: string\n          ip_address: unknown | null\n          question_id: string | null\n          user_agent: string | null\n          user_id: string | null\n        }\n        Insert: {\n          created_at?: string | null\n          id?: string\n          ip_address?: unknown | null\n          question_id?: string | null\n          user_agent?: string | null\n          user_id?: string | null\n        }\n        Update: {\n          created_at?: string | null\n          id?: string\n          ip_address?: unknown | null\n          question_id?: string | null\n          user_agent?: string | null\n          user_id?: string | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"qa_views_question_id_fkey\"\n            columns: [\"question_id\"]\n            isOneToOne: false\n            referencedRelation: \"qa_questions\"\n            referencedColumns: [\"id\"]\n          },\n        ]\n      }\n      qa_votes: {\n        Row: {\n          answer_id: string | null\n          created_at: string\n          id: number\n          question_id: string | null\n          updated_at: string\n          user_id: string\n          vote_type: number\n        }\n        Insert: {\n          answer_id?: string | null\n          created_at?: string\n          id?: number\n          question_id?: string | null\n          updated_at?: string\n          user_id: string\n          vote_type: number\n        }\n        Update: {\n          answer_id?: string | null\n          created_at?: string\n          id?: number\n          question_id?: string | null\n          updated_at?: string\n          user_id?: string\n          vote_type?: number\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"qa_votes_answer_id_fkey\"\n            columns: [\"answer_id\"]\n            isOneToOne: false\n            referencedRelation: \"qa_answers\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"qa_votes_question_id_fkey\"\n            columns: [\"question_id\"]\n            isOneToOne: false\n            referencedRelation: \"qa_questions\"\n            referencedColumns: [\"id\"]\n          },\n        ]\n      }\n      question_votes: {\n        Row: {\n          answer_id: string | null\n          created_at: string\n          id: number\n          question_id: string | null\n          updated_at: string\n          user_id: string\n          vote_type: number\n        }\n        Insert: {\n          answer_id?: string | null\n          created_at?: string\n          id?: number\n          question_id?: string | null\n          updated_at?: string\n          user_id: string\n          vote_type: number\n        }\n        Update: {\n          answer_id?: string | null\n          created_at?: string\n          id?: number\n          question_id?: string | null\n          updated_at?: string\n          user_id?: string\n          vote_type?: number\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"question_votes_answer_id_fkey\"\n            columns: [\"answer_id\"]\n            isOneToOne: false\n            referencedRelation: \"qa_answers\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"question_votes_question_id_fkey\"\n            columns: [\"question_id\"]\n            isOneToOne: false\n            referencedRelation: \"qa_questions\"\n            referencedColumns: [\"id\"]\n          },\n        ]\n      }\n      questions: {\n        Row: {\n          correct_answer: string\n          created_at: string | null\n          explanation: string | null\n          id: string\n          image_url: string | null\n          math_expression: string | null\n          options: Json | null\n          order_index: number\n          points: number | null\n          question_text: string\n          question_type: string | null\n          quiz_id: string\n          updated_at: string | null\n          view_count: number | null\n        }\n        Insert: {\n          correct_answer: string\n          created_at?: string | null\n          explanation?: string | null\n          id?: string\n          image_url?: string | null\n          math_expression?: string | null\n          options?: Json | null\n          order_index: number\n          points?: number | null\n          question_text: string\n          question_type?: string | null\n          quiz_id: string\n          updated_at?: string | null\n          view_count?: number | null\n        }\n        Update: {\n          correct_answer?: string\n          created_at?: string | null\n          explanation?: string | null\n          id?: string\n          image_url?: string | null\n          math_expression?: string | null\n          options?: Json | null\n          order_index?: number\n          points?: number | null\n          question_text?: string\n          question_type?: string | null\n          quiz_id?: string\n          updated_at?: string | null\n          view_count?: number | null\n        }\n        Relationships: []\n      }\n      quiz_attempts: {\n        Row: {\n          attempt_number: number\n          current_question: number | null\n          id: string\n          last_activity: string | null\n          quiz_id: string\n          started_at: string | null\n          status: string | null\n          user_id: string\n        }\n        Insert: {\n          attempt_number: number\n          current_question?: number | null\n          id?: string\n          last_activity?: string | null\n          quiz_id: string\n          started_at?: string | null\n          status?: string | null\n          user_id: string\n        }\n        Update: {\n          attempt_number?: number\n          current_question?: number | null\n          id?: string\n          last_activity?: string | null\n          quiz_id?: string\n          started_at?: string | null\n          status?: string | null\n          user_id?: string\n        }\n        Relationships: []\n      }\n      quiz_categories: {\n        Row: {\n          color: string\n          created_at: string\n          created_by: string | null\n          description: string | null\n          id: string\n          is_active: boolean\n          name: string\n          updated_at: string\n        }\n        Insert: {\n          color?: string\n          created_at?: string\n          created_by?: string | null\n          description?: string | null\n          id?: string\n          is_active?: boolean\n          name: string\n          updated_at?: string\n        }\n        Update: {\n          color?: string\n          created_at?: string\n          created_by?: string | null\n          description?: string | null\n          id?: string\n          is_active?: boolean\n          name?: string\n          updated_at?: string\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"quiz_categories_created_by_fkey\"\n            columns: [\"created_by\"]\n            isOneToOne: false\n            referencedRelation: \"users\"\n            referencedColumns: [\"id\"]\n          },\n        ]\n      }\n      quiz_likes: {\n        Row: {\n          created_at: string | null\n          id: string\n          quiz_id: string\n          user_id: string\n        }\n        Insert: {\n          created_at?: string | null\n          id?: string\n          quiz_id: string\n          user_id: string\n        }\n        Update: {\n          created_at?: string | null\n          id?: string\n          quiz_id?: string\n          user_id?: string\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"quiz_likes_quiz_id_fkey\"\n            columns: [\"quiz_id\"]\n            isOneToOne: false\n            referencedRelation: \"quizzes\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"quiz_likes_user_id_fkey\"\n            columns: [\"user_id\"]\n            isOneToOne: false\n            referencedRelation: \"users\"\n            referencedColumns: [\"id\"]\n          },\n        ]\n      }\n      quiz_ratings: {\n        Row: {\n          created_at: string | null\n          id: string\n          quiz_id: string\n          rating: number\n          updated_at: string | null\n          user_id: string\n        }\n        Insert: {\n          created_at?: string | null\n          id?: string\n          quiz_id: string\n          rating: number\n          updated_at?: string | null\n          user_id: string\n        }\n        Update: {\n          created_at?: string | null\n          id?: string\n          quiz_id?: string\n          rating?: number\n          updated_at?: string | null\n          user_id?: string\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"quiz_ratings_quiz_id_fkey\"\n            columns: [\"quiz_id\"]\n            isOneToOne: false\n            referencedRelation: \"quizzes\"\n            referencedColumns: [\"id\"]\n          },\n          {\n            foreignKeyName: \"quiz_ratings_user_id_fkey\"\n            columns: [\"user_id\"]\n            isOneToOne: false\n            referencedRelation: \"users\"\n            referencedColumns: [\"id\"]\n          },\n        ]\n      }\n      quiz_results: {\n        Row: {\n          answers: Json\n          completed_at: string | null\n          correct_answers: number\n          created_at: string | null\n          id: string\n          percentage: number | null\n          quiz_id: string\n          score: number\n          started_at: string | null\n          time_taken: number | null\n          total_questions: number\n          user_id: string\n        }\n        Insert: {\n          answers: Json\n          completed_at?: string | null\n          correct_answers: number\n          created_at?: string | null\n          id?: string\n          percentage?: number | null\n          quiz_id: string\n          score: number\n          started_at?: string | null\n          time_taken?: number | null\n          total_questions: number\n          user_id: string\n        }\n        Update: {\n          answers?: Json\n          completed_at?: string | null\n          correct_answers?: number\n          created_at?: string | null\n          id?: string\n          percentage?: number | null\n          quiz_id?: string\n          score?: number\n          started_at?: string | null\n          time_taken?: number | null\n          total_questions?: number\n          user_id?: string\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"fk_quiz\"\n            columns: [\"quiz_id\"]\n            isOneToOne: false\n            referencedRelation: \"quizzes\"\n            referencedColumns: [\"id\"]\n          },\n        ]\n      }\n      quiz_views: {\n        Row: {\n          created_at: string | null\n          id: string\n          ip_address: unknown | null\n          quiz_id: string | null\n          user_agent: string | null\n          user_id: string | null\n        }\n        Insert: {\n          created_at?: string | null\n          id?: string\n          ip_address?: unknown | null\n          quiz_id?: string | null\n          user_agent?: string | null\n          user_id?: string | null\n        }\n        Update: {\n          created_at?: string | null\n          id?: string\n          ip_address?: unknown | null\n          quiz_id?: string | null\n          user_agent?: string | null\n          user_id?: string | null\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"quiz_views_quiz_id_fkey\"\n            columns: [\"quiz_id\"]\n            isOneToOne: false\n            referencedRelation: \"quizzes\"\n            referencedColumns: [\"id\"]\n          },\n        ]\n      }\n      quizzes: {\n        Row: {\n          access_code: string | null\n          attempts_count: number\n          average_rating: number | null\n          category: string | null\n          category_id: string | null\n          created_at: string | null\n          creator_id: string\n          description: string | null\n          difficulty: string | null\n          id: string\n          is_public: boolean | null\n          likes_count: number | null\n          max_attempts: number | null\n          settings: Json | null\n          time_limit: number | null\n          title: string\n          total_ratings: number | null\n          updated_at: string | null\n          view_count: number\n        }\n        Insert: {\n          access_code?: string | null\n          attempts_count?: number\n          average_rating?: number | null\n          category?: string | null\n          category_id?: string | null\n          created_at?: string | null\n          creator_id: string\n          description?: string | null\n          difficulty?: string | null\n          id?: string\n          is_public?: boolean | null\n          likes_count?: number | null\n          max_attempts?: number | null\n          settings?: Json | null\n          time_limit?: number | null\n          title: string\n          total_ratings?: number | null\n          updated_at?: string | null\n          view_count?: number\n        }\n        Update: {\n          access_code?: string | null\n          attempts_count?: number\n          average_rating?: number | null\n          category?: string | null\n          category_id?: string | null\n          created_at?: string | null\n          creator_id?: string\n          description?: string | null\n          difficulty?: string | null\n          id?: string\n          is_public?: boolean | null\n          likes_count?: number | null\n          max_attempts?: number | null\n          settings?: Json | null\n          time_limit?: number | null\n          title?: string\n          total_ratings?: number | null\n          updated_at?: string | null\n          view_count?: number\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"quizzes_category_id_fkey\"\n            columns: [\"category_id\"]\n            isOneToOne: false\n            referencedRelation: \"quiz_categories\"\n            referencedColumns: [\"id\"]\n          },\n        ]\n      }\n      user_achievements: {\n        Row: {\n          achievement_name: string\n          achievement_type: string\n          description: string | null\n          earned_at: string | null\n          id: string\n          metadata: Json | null\n          user_id: string\n        }\n        Insert: {\n          achievement_name: string\n          achievement_type: string\n          description?: string | null\n          earned_at?: string | null\n          id?: string\n          metadata?: Json | null\n          user_id: string\n        }\n        Update: {\n          achievement_name?: string\n          achievement_type?: string\n          description?: string | null\n          earned_at?: string | null\n          id?: string\n          metadata?: Json | null\n          user_id?: string\n        }\n        Relationships: []\n      }\n      user_votes: {\n        Row: {\n          content_id: string\n          content_type: string\n          created_at: string\n          id: string\n          user_id: string\n          vote_type: string\n        }\n        Insert: {\n          content_id: string\n          content_type: string\n          created_at?: string\n          id?: string\n          user_id: string\n          vote_type: string\n        }\n        Update: {\n          content_id?: string\n          content_type?: string\n          created_at?: string\n          id?: string\n          user_id?: string\n          vote_type?: string\n        }\n        Relationships: [\n          {\n            foreignKeyName: \"user_votes_user_id_fkey\"\n            columns: [\"user_id\"]\n            isOneToOne: false\n            referencedRelation: \"users\"\n            referencedColumns: [\"id\"]\n          },\n        ]\n      }\n      users: {\n        Row: {\n          activity_history: Json | null\n          avatar_url: string | null\n          bio: string | null\n          can_create_quiz: boolean | null\n          created_at: string | null\n          email: string\n          full_name: string | null\n          id: string\n          is_active: boolean | null\n          is_private: boolean\n          last_sign_in_at: string | null\n          role: string | null\n          settings: Json | null\n          updated_at: string | null\n        }\n        Insert: {\n          activity_history?: Json | null\n          avatar_url?: string | null\n          bio?: string | null\n          can_create_quiz?: boolean | null\n          created_at?: string | null\n          email: string\n          full_name?: string | null\n          id: string\n          is_active?: boolean | null\n          is_private?: boolean\n          last_sign_in_at?: string | null\n          role?: string | null\n          settings?: Json | null\n          updated_at?: string | null\n        }\n        Update: {\n          activity_history?: Json | null\n          avatar_url?: string | null\n          bio?: string | null\n          can_create_quiz?: boolean | null\n          created_at?: string | null\n          email?: string\n          full_name?: string | null\n          id?: string\n          is_active?: boolean | null\n          is_private?: boolean\n          last_sign_in_at?: string | null\n          role?: string | null\n          settings?: Json | null\n          updated_at?: string | null\n        }\n        Relationships: []\n      }\n    }\n    Views: {\n      [_ in never]: never\n    }\n    Functions: {\n      allow_direct_login: {\n        Args: Record<PropertyKey, never>\n        Returns: undefined\n      }\n      assign_admin_role: {\n        Args: { target_user_id: string }\n        Returns: Json\n      }\n      assign_admin_role_test: {\n        Args: { caller_user_id: string; target_user_id: string }\n        Returns: Json\n      }\n      can_create_quiz: {\n        Args: { user_id?: string }\n        Returns: boolean\n      }\n      can_current_user_create_quiz: {\n        Args: Record<PropertyKey, never>\n        Returns: boolean\n      }\n      can_user_create_quiz: {\n        Args: { user_uuid: string }\n        Returns: boolean\n      }\n      check_email_exists: {\n        Args: { email_address: string }\n        Returns: boolean\n      }\n      check_form_like: {\n        Args: { form_id_param: string; user_id_param: string }\n        Returns: boolean\n      }\n      complete_quiz_attempt: {\n        Args: {\n          p_answers: Json\n          p_quiz_id: string\n          p_time_taken?: number\n          p_user_id: string\n        }\n        Returns: Json\n      }\n      create_admin_user: {\n        Args: { admin_name?: string; user_email: string; user_password: string }\n        Returns: Json\n      }\n      create_category: {\n        Args: {\n          category_description?: string\n          category_name: string\n          category_type: string\n        }\n        Returns: string\n      }\n      create_notification: {\n        Args: {\n          p_data?: Json\n          p_message?: string\n          p_title: string\n          p_type: string\n          p_user_id: string\n        }\n        Returns: string\n      }\n      create_qa_answer: {\n        Args: {\n          p_content: string\n          p_image_url?: string\n          p_parent_answer_id?: string\n          p_question_id: string\n        }\n        Returns: string\n      }\n      create_quiz_category: {\n        Args: {\n          category_color?: string\n          category_description?: string\n          category_name: string\n        }\n        Returns: string\n      }\n      delete_category: {\n        Args: {\n          force_delete?: boolean\n          p_category_id: string\n          reassign_to_default?: boolean\n        }\n        Returns: Json\n      }\n      delete_form: {\n        Args: { p_form_id: string }\n        Returns: undefined\n      }\n      delete_form_attachment: {\n        Args: { p_attachment_id: string }\n        Returns: boolean\n      }\n      delete_form_reply: {\n        Args: { reply_id: string }\n        Returns: boolean\n      }\n      delete_qa_answer: {\n        Args: { answer_id: string }\n        Returns: undefined\n      }\n      delete_qa_question: {\n        Args: { p_question_id: string }\n        Returns: undefined\n      }\n      delete_quiz: {\n        Args: { p_quiz_id: string }\n        Returns: boolean\n      }\n      delete_quiz_category: {\n        Args: { category_id: string }\n        Returns: boolean\n      }\n      delete_user_account: {\n        Args: { target_user_id: string }\n        Returns: Json\n      }\n      delete_user_safe: {\n        Args: { requesting_user_id: string; target_user_id: string }\n        Returns: Json\n      }\n      ensure_super_admin_roles: {\n        Args: Record<PropertyKey, never>\n        Returns: undefined\n      }\n      get_admin_stats: {\n        Args: Record<PropertyKey, never>\n        Returns: Json\n      }\n      get_all_users_with_admin_info: {\n        Args: Record<PropertyKey, never>\n        Returns: {\n          can_create_quiz: boolean\n          created_at: string\n          email: string\n          full_name: string\n          id: string\n          is_active: boolean\n          is_admin: boolean\n          is_private: boolean\n          is_super_admin: boolean\n          role: string\n          updated_at: string\n        }[]\n      }\n      get_categories_by_type: {\n        Args: { p_type?: string }\n        Returns: {\n          created_at: string\n          description: string\n          id: string\n          item_count: number\n          name: string\n          type: string\n          updated_at: string\n        }[]\n      }\n      get_display_name: {\n        Args: { user_id: string; viewer_id?: string }\n        Returns: string\n      }\n      get_form_stats: {\n        Args: { p_form_id: string }\n        Returns: {\n          total_likes: number\n          total_views: number\n          user_liked: boolean\n        }[]\n      }\n      get_form_with_details: {\n        Args: { form_id_param: string }\n        Returns: {\n          access_code: string\n          category: string\n          created_at: string\n          creator_avatar_url: string\n          creator_full_name: string\n          creator_id: string\n          creator_is_private: boolean\n          description: string\n          id: string\n          is_public: boolean\n          likes_count: number\n          settings: Json\n          submission_count: number\n          title: string\n          updated_at: string\n          view_count: number\n        }[]\n      }\n      get_form_with_stats: {\n        Args: { p_form_id: string }\n        Returns: {\n          access_code: string\n          category: string\n          category_id: string\n          created_at: string\n          creator_full_name: string\n          creator_id: string\n          description: string\n          id: string\n          is_public: boolean\n          likes_count: number\n          settings: Json\n          submission_count: number\n          title: string\n          updated_at: string\n          user_liked: boolean\n          views_count: number\n        }[]\n      }\n      get_forms_with_privacy: {\n        Args: {\n          p_category_filter?: string\n          p_limit?: number\n          p_offset?: number\n        }\n        Returns: {\n          category_name: string\n          created_at: string\n          creator_id: string\n          creator_name: string\n          description: string\n          id: string\n          is_public: boolean\n          submission_count: number\n          title: string\n          updated_at: string\n          view_count: number\n        }[]\n      }\n      get_forms_with_stats: {\n        Args: Record<PropertyKey, never>\n        Returns: {\n          access_code: string\n          category: string\n          category_id: string\n          created_at: string\n          creator_full_name: string\n          creator_id: string\n          description: string\n          id: string\n          is_public: boolean\n          likes_count: number\n          settings: Json\n          submission_count: number\n          title: string\n          updated_at: string\n          views_count: number\n        }[]\n      }\n      get_qa_answers_with_privacy: {\n        Args: { p_question_id: string }\n        Returns: {\n          author_id: string\n          author_name: string\n          content: string\n          created_at: string\n          id: string\n          image_url: string\n          is_accepted: boolean\n          question_id: string\n          updated_at: string\n          votes_score: number\n        }[]\n      }\n      get_qa_question_with_details: {\n        Args: { p_question_id: string }\n        Returns: {\n          accepted_answer_id: string\n          author_id: string\n          author_name: string\n          category_id: string\n          category_name: string\n          content: string\n          created_at: string\n          id: string\n          image_url: string\n          is_answered: boolean\n          tags: string[]\n          title: string\n          updated_at: string\n          views: number\n          votes_score: number\n        }[]\n      }\n      get_qa_questions_with_privacy: {\n        Args: {\n          p_category_filter?: string\n          p_limit?: number\n          p_offset?: number\n          p_sort_by?: string\n        }\n        Returns: {\n          author_id: string\n          author_name: string\n          category_name: string\n          content: string\n          created_at: string\n          id: string\n          image_url: string\n          is_answered: boolean\n          tags: string[]\n          title: string\n          updated_at: string\n          views: number\n          votes_score: number\n        }[]\n      }\n      get_quiz_leaderboard: {\n        Args: { quiz_id_param: string }\n        Returns: {\n          avatar_url: string\n          completed_at: string\n          correct_answers: number\n          full_name: string\n          rank: number\n          score: number\n          time_taken: number\n          total_questions: number\n          user_id: string\n        }[]\n      }\n      get_user_answer_vote: {\n        Args: { p_answer_id: string; p_user_id: string }\n        Returns: number\n      }\n      get_user_display_name: {\n        Args: { requesting_user_id?: string; target_user_id: string }\n        Returns: string\n      }\n      get_user_profile_admin: {\n        Args: { target_user_id: string }\n        Returns: {\n          avatar_url: string\n          can_create_quiz: boolean\n          created_at: string\n          email: string\n          full_name: string\n          id: string\n          is_active: boolean\n          is_private: boolean\n          role: string\n          updated_at: string\n        }[]\n      }\n      get_user_question_vote: {\n        Args: { p_question_id: string; p_user_id: string }\n        Returns: number\n      }\n      get_user_role_info: {\n        Args: { user_id: string }\n        Returns: {\n          can_create_quiz: boolean\n          is_admin: boolean\n          is_super_admin: boolean\n          role: string\n        }[]\n      }\n      get_users_with_roles: {\n        Args: Record<PropertyKey, never>\n        Returns: {\n          can_create_quiz: boolean\n          created_at: string\n          email: string\n          full_name: string\n          id: string\n          is_active: boolean\n          is_super_admin: boolean\n          role: string\n          updated_at: string\n        }[]\n      }\n      handle_answer_vote: {\n        Args: { p_answer_id: string; p_user_id: string; p_vote_type: number }\n        Returns: Json\n      }\n      handle_question_vote: {\n        Args: { p_question_id: string; p_user_id: string; p_vote_type: number }\n        Returns: Json\n      }\n      has_admin_panel_access: {\n        Args: { user_id?: string }\n        Returns: boolean\n      }\n      increment_forum_post_view_count: {\n        Args: { post_id: string }\n        Returns: undefined\n      }\n      increment_forum_post_views: {\n        Args: { post_id: string }\n        Returns: undefined\n      }\n      increment_post_views: {\n        Args: { post_id: string }\n        Returns: undefined\n      }\n      increment_qa_question_views: {\n        Args: { p_question_id: string }\n        Returns: boolean\n      }\n      increment_quiz_view_count: {\n        Args: { quiz_id: string }\n        Returns: undefined\n      }\n      increment_quiz_views: {\n        Args: { target_quiz_id: string }\n        Returns: Json\n      }\n      increment_view_count: {\n        Args: { record_id: string; table_name: string }\n        Returns: undefined\n      }\n      is_admin: {\n        Args: Record<PropertyKey, never> | { user_id?: string }\n        Returns: boolean\n      }\n      is_admin_user: {\n        Args: { user_id: string }\n        Returns: boolean\n      }\n      is_primary_admin: {\n        Args: { user_email: string }\n        Returns: boolean\n      }\n      is_super_admin: {\n        Args: { user_id: string }\n        Returns: boolean\n      }\n      is_super_admin_email: {\n        Args: { email_param: string }\n        Returns: boolean\n      }\n      manage_quiz_category: {\n        Args: {\n          action: string\n          category_color?: string\n          category_description?: string\n          category_id?: string\n          category_name?: string\n        }\n        Returns: Json\n      }\n      rate_quiz: {\n        Args: {\n          rating_user_id: string\n          rating_value: number\n          target_quiz_id: string\n        }\n        Returns: Json\n      }\n      record_form_view: {\n        Args: {\n          p_form_id: string\n          p_ip_address?: unknown\n          p_user_agent?: string\n        }\n        Returns: number\n      }\n      record_qa_view: {\n        Args: {\n          p_ip_address?: unknown\n          p_question_id: string\n          p_user_agent?: string\n        }\n        Returns: number\n      }\n      remove_admin_role: {\n        Args: { target_user_id: string }\n        Returns: Json\n      }\n      request_email_change: {\n        Args: { new_email_address: string }\n        Returns: Json\n      }\n      save_form_attachment: {\n        Args:\n          | {\n              p_file_name: string\n              p_file_path: string\n              p_file_size: number\n              p_form_id: string\n              p_mime_type: string\n              p_original_name: string\n              p_storage_bucket: string\n            }\n          | {\n              p_file_name: string\n              p_file_path: string\n              p_file_size: number\n              p_form_id: string\n              p_mime_type: string\n              p_original_name: string\n              p_storage_bucket?: string\n            }\n        Returns: string\n      }\n      search_qa_questions: {\n        Args: {\n          category_filter?: string\n          limit_count?: number\n          offset_count?: number\n          search_query?: string\n          sort_by?: string\n        }\n        Returns: {\n          accepted_answer_id: string | null\n          author_id: string | null\n          category: string | null\n          category_id: string | null\n          content: string\n          created_at: string\n          id: string\n          image_url: string | null\n          is_answered: boolean\n          tags: string[] | null\n          title: string\n          updated_at: string\n          views: number\n          votes_score: number\n        }[]\n      }\n      search_quizzes: {\n        Args: {\n          category_filter?: string\n          difficulty_filter?: string\n          limit_count?: number\n          min_rating?: number\n          offset_count?: number\n          search_query?: string\n          sort_by?: string\n        }\n        Returns: {\n          attempts_count: number\n          average_rating: number\n          category: string\n          created_at: string\n          creator_id: string\n          creator_name: string\n          description: string\n          difficulty: string\n          id: string\n          is_public: boolean\n          title: string\n          total_ratings: number\n          updated_at: string\n          view_count: number\n        }[]\n      }\n      toggle_form_like: {\n        Args: { p_form_id: string }\n        Returns: {\n          liked: boolean\n          total_likes: number\n        }[]\n      }\n      toggle_like: {\n        Args: { content_id: string; content_type: string; user_id: string }\n        Returns: Json\n      }\n      toggle_qa_question_like: {\n        Args: { p_question_id: string }\n        Returns: {\n          liked: boolean\n          total_likes: number\n        }[]\n      }\n      toggle_quiz_creation_permission: {\n        Args: { can_create: boolean; target_user_id: string }\n        Returns: Json\n      }\n      update_category: {\n        Args: {\n          category_description?: string\n          category_id: string\n          category_name?: string\n        }\n        Returns: boolean\n      }\n      update_quiz_rating_stats: {\n        Args: { target_quiz_id: string }\n        Returns: undefined\n      }\n      update_user_activity: {\n        Args: {\n          p_activity_data: Json\n          p_activity_type: string\n          p_user_id: string\n        }\n        Returns: boolean\n      }\n      update_user_role_safe: {\n        Args: {\n          new_role: string\n          requesting_user_id: string\n          target_user_id: string\n        }\n        Returns: Json\n      }\n      upload_qa_image: {\n        Args: {\n          answer_id?: string\n          content_type: string\n          image_data: string\n          question_id?: string\n        }\n        Returns: string\n      }\n      verify_email_change: {\n        Args: { verification_token_param: string }\n        Returns: Json\n      }\n      verify_user_session: {\n        Args: Record<PropertyKey, never>\n        Returns: boolean\n      }\n      vote_on_content: {\n        Args:\n          | {\n              content_id: string\n              content_type: string\n              user_id?: string\n              vote_type: string\n            }\n          | { content_id: string; content_type: string; vote_type: string }\n        Returns: Json\n      }\n      vote_on_qa_answer: {\n        Args: { answer_id: string; vote_type: number }\n        Returns: Json\n      }\n      vote_on_qa_question: {\n        Args: { question_id: string; vote_type: number }\n        Returns: Json\n      }\n    }\n    Enums: {\n      [_ in never]: never\n    }\n    CompositeTypes: {\n      [_ in never]: never\n    }\n  }\n}\n\ntype DatabaseWithoutInternals = Omit<Database, \"__InternalSupabase\">\n\ntype DefaultSchema = DatabaseWithoutInternals[Extract<keyof Database, \"public\">]\n\nexport type Tables<\n  DefaultSchemaTableNameOrOptions extends\n    | keyof (DefaultSchema[\"Tables\"] & DefaultSchema[\"Views\"])\n    | { schema: keyof DatabaseWithoutInternals },\n  TableName extends DefaultSchemaTableNameOrOptions extends {\n    schema: keyof DatabaseWithoutInternals\n  }\n    ? keyof (DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions[\"schema\"]][\"Tables\"] &\n        DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions[\"schema\"]][\"Views\"])\n    : never = never,\n> = DefaultSchemaTableNameOrOptions extends {\n  schema: keyof DatabaseWithoutInternals\n}\n  ? (DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions[\"schema\"]][\"Tables\"] &\n      DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions[\"schema\"]][\"Views\"])[TableName] extends {\n      Row: infer R\n    }\n    ? R\n    : never\n  : DefaultSchemaTableNameOrOptions extends keyof (DefaultSchema[\"Tables\"] &\n        DefaultSchema[\"Views\"])\n    ? (DefaultSchema[\"Tables\"] &\n        DefaultSchema[\"Views\"])[DefaultSchemaTableNameOrOptions] extends {\n        Row: infer R\n      }\n      ? R\n      : never\n    : never\n\nexport type TablesInsert<\n  DefaultSchemaTableNameOrOptions extends\n    | keyof DefaultSchema[\"Tables\"]\n    | { schema: keyof DatabaseWithoutInternals },\n  TableName extends DefaultSchemaTableNameOrOptions extends {\n    schema: keyof DatabaseWithoutInternals\n  }\n    ? keyof DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions[\"schema\"]][\"Tables\"]\n    : never = never,\n> = DefaultSchemaTableNameOrOptions extends {\n  schema: keyof DatabaseWithoutInternals\n}\n  ? DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions[\"schema\"]][\"Tables\"][TableName] extends {\n      Insert: infer I\n    }\n    ? I\n    : never\n  : DefaultSchemaTableNameOrOptions extends keyof DefaultSchema[\"Tables\"]\n    ? DefaultSchema[\"Tables\"][DefaultSchemaTableNameOrOptions] extends {\n        Insert: infer I\n      }\n      ? I\n      : never\n    : never\n\nexport type TablesUpdate<\n  DefaultSchemaTableNameOrOptions extends\n    | keyof DefaultSchema[\"Tables\"]\n    | { schema: keyof DatabaseWithoutInternals },\n  TableName extends DefaultSchemaTableNameOrOptions extends {\n    schema: keyof DatabaseWithoutInternals\n  }\n    ? keyof DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions[\"schema\"]][\"Tables\"]\n    : never = never,\n> = DefaultSchemaTableNameOrOptions extends {\n  schema: keyof DatabaseWithoutInternals\n}\n  ? DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions[\"schema\"]][\"Tables\"][TableName] extends {\n      Update: infer U\n    }\n    ? U\n    : never\n  : DefaultSchemaTableNameOrOptions extends keyof DefaultSchema[\"Tables\"]\n    ? DefaultSchema[\"Tables\"][DefaultSchemaTableNameOrOptions] extends {\n        Update: infer U\n      }\n      ? U\n      : never\n    : never\n\nexport type Enums<\n  DefaultSchemaEnumNameOrOptions extends\n    | keyof DefaultSchema[\"Enums\"]\n    | { schema: keyof DatabaseWithoutInternals },\n  EnumName extends DefaultSchemaEnumNameOrOptions extends {\n    schema: keyof DatabaseWithoutInternals\n  }\n    ? keyof DatabaseWithoutInternals[DefaultSchemaEnumNameOrOptions[\"schema\"]][\"Enums\"]\n    : never = never,\n> = DefaultSchemaEnumNameOrOptions extends {\n  schema: keyof DatabaseWithoutInternals\n}\n  ? DatabaseWithoutInternals[DefaultSchemaEnumNameOrOptions[\"schema\"]][\"Enums\"][EnumName]\n  : DefaultSchemaEnumNameOrOptions extends keyof DefaultSchema[\"Enums\"]\n    ? DefaultSchema[\"Enums\"][DefaultSchemaEnumNameOrOptions]\n    : never\n\nexport type CompositeTypes<\n  PublicCompositeTypeNameOrOptions extends\n    | keyof DefaultSchema[\"CompositeTypes\"]\n    | { schema: keyof DatabaseWithoutInternals },\n  CompositeTypeName extends PublicCompositeTypeNameOrOptions extends {\n    schema: keyof DatabaseWithoutInternals\n  }\n    ? keyof DatabaseWithoutInternals[PublicCompositeTypeNameOrOptions[\"schema\"]][\"CompositeTypes\"]\n    : never = never,\n> = PublicCompositeTypeNameOrOptions extends {\n  schema: keyof DatabaseWithoutInternals\n}\n  ? DatabaseWithoutInternals[PublicCompositeTypeNameOrOptions[\"schema\"]][\"CompositeTypes\"][CompositeTypeName]\n  : PublicCompositeTypeNameOrOptions extends keyof DefaultSchema[\"CompositeTypes\"]\n    ? DefaultSchema[\"CompositeTypes\"][PublicCompositeTypeNameOrOptions]\n    : never\n\nexport const Constants = {\n  public: {\n    Enums: {},\n  },\n} as const\n"}